version: "3.4"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20000000
    depends_on:
      - zookeeper
  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Admin123!"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    restart: always
  mongodb:
    container_name: mongo-container
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
#      ME_CONFIG_MONGODB_ADMINPASSWORD: Admin123!
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data_container:/data/db"
    restart: always
#    networks: 
#      - my-docker-network
    
#############################
#mongoclient can be used any 
#############################   
  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
#      ME_CONFIG_MONGODB_ADMINPASSWORD: Admin123!
      ME_CONFIG_MONGODB_SERVER: mongo-container
    depends_on:
      - mongodb
    restart: unless-stopped
#    networks:
#      - my-docker-network
    
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongodb_data_container:
    driver: local
    
networks:
  default:
    name: my-docker-network

#networks:
#  my-docker-network:
#    driver: bridge